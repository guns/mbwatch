Delivered-To: self@sungpae.com
Received: by 10.14.212.5 with SMTP id x5csp793eeo;
        Thu, 13 Mar 2014 20:59:08 -0700 (PDT)
X-Received: by 10.68.196.137 with SMTP id im9mr6442176pbc.105.1394769547269;
        Thu, 13 Mar 2014 20:59:07 -0700 (PDT)
Return-Path: <clojure+bncBDZITRV65QBBBBH5RGMQKGQEKH3ZPAY@googlegroups.com>
Received: from mail-pb0-x239.google.com (mail-pb0-x239.google.com [2607:f8b0:400e:c01::239])
        by mx.google.com with ESMTPS id wm7si2759591pab.315.2014.03.13.20.59.06
        for <self@sungpae.com>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Thu, 13 Mar 2014 20:59:07 -0700 (PDT)
Received-SPF: pass (google.com: domain of clojure+bncBDZITRV65QBBBBH5RGMQKGQEKH3ZPAY@googlegroups.com designates 2607:f8b0:400e:c01::239 as permitted sender)
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of clojure+bncBDZITRV65QBBBBH5RGMQKGQEKH3ZPAY@googlegroups.com designates 2607:f8b0:400e:c01::239 as permitted sender) smtp.mail=clojure+bncBDZITRV65QBBBBH5RGMQKGQEKH3ZPAY@googlegroups.com;
       dkim=pass header.i=@googlegroups.com;
       dmarc=pass (p=NONE dis=NONE) header.from=gmail.com
Received: by mail-pb0-f57.google.com with SMTP id rp16sf393062pbb.12
        for <self@sungpae.com>; Thu, 13 Mar 2014 20:59:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=20120806;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :x-original-sender:x-original-authentication-results:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type;
        bh=3K10KXTecJDovnG1Lfoou/4/uY9VdQBwIW3Qey5WSXM=;
        b=wWduj+YzbDggc/w5KbAy4S+mQS6mZSy30q9nacHPaPWts6xon6PCrRCF8vqnlADavq
         wt1FicUsr115/6GZDatB2kAaL9le0e8jAlhQXTR0tG78sP//eHO2OgR2Q0CQyNaz5iqw
         IiAz0rApe8kHJcaox8s8NgY09SaKQ1k1EIfD7ubr2FxaQde7hpX19TyQsKdKv2IaUkYQ
         zIxbq5kcQxrSz19yH8jrpt7DKAFb86TB/yVaicj75tSzf3sasrcarzoCBJvtFA2iMtq5
         /q4LHyTA6KNXPvhYdGAX1HtKcEZ99SyU0NNKRGcQdHsS6KCJLq9/dkH8cazwnHS+x+yS
         9+uA==
X-Received: by 10.140.109.98 with SMTP id k89mr5615qgf.11.1394769546414;
        Thu, 13 Mar 2014 20:59:06 -0700 (PDT)
X-BeenThere: clojure@googlegroups.com
Received: by 10.140.80.149 with SMTP id c21ls648959qgd.52.gmail; Thu, 13 Mar
 2014 20:59:00 -0700 (PDT)
X-Received: by 10.236.125.6 with SMTP id y6mr2166307yhh.3.1394769540295;
        Thu, 13 Mar 2014 20:59:00 -0700 (PDT)
Received: from mail-ie0-x235.google.com (mail-ie0-x235.google.com [2607:f8b0:4001:c03::235])
        by gmr-mx.google.com with ESMTPS id u4si5795677igm.2.2014.03.13.20.59.00
        for <clojure@googlegroups.com>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Thu, 13 Mar 2014 20:59:00 -0700 (PDT)
Received-SPF: pass (google.com: domain of andy.coolware@gmail.com designates 2607:f8b0:4001:c03::235 as permitted sender) client-ip=2607:f8b0:4001:c03::235;
Received: by mail-ie0-f181.google.com with SMTP id tp5so2036436ieb.40
        for <clojure@googlegroups.com>; Thu, 13 Mar 2014 20:59:00 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.50.143.12 with SMTP id sa12mr5467541igb.45.1394769540150;
 Thu, 13 Mar 2014 20:59:00 -0700 (PDT)
Received: by 10.42.92.142 with HTTP; Thu, 13 Mar 2014 20:59:00 -0700 (PDT)
In-Reply-To: <CAL36E+tA+KTsSPcmxDXNB2xS-fz7D4dNB5o8R6BGaFBiOR5UjA@mail.gmail.com>
References: <CAMtSTXxevmM5NixMDJR6V4403BAg985h=naq-AAiZ+=NdD55NQ@mail.gmail.com>
	<CAL36E+tA+KTsSPcmxDXNB2xS-fz7D4dNB5o8R6BGaFBiOR5UjA@mail.gmail.com>
Date: Thu, 13 Mar 2014 20:59:00 -0700
Message-ID: <CAMtSTXygkFcxR0mq_Fw7JkH_HgMn1wp+cqQM4nyKCMOdmmYjUA@mail.gmail.com>
Subject: Re: STM and persistent data structures performance on mutli-core archs
From: Andy C <andy.coolware@gmail.com>
To: clojure@googlegroups.com
X-Original-Sender: andy.coolware@gmail.com
X-Original-Authentication-Results: gmr-mx.google.com;       spf=pass
 (google.com: domain of andy.coolware@gmail.com designates 2607:f8b0:4001:c03::235
 as permitted sender) smtp.mail=andy.coolware@gmail.com;       dkim=pass
 header.i=@gmail.com;       dmarc=pass (p=NONE dis=NONE) header.from=gmail.com
Reply-To: clojure@googlegroups.com
Precedence: list
Mailing-list: list clojure@googlegroups.com; contact clojure+owners@googlegroups.com
List-ID: <clojure.googlegroups.com>
X-Google-Group-Id: 999298108703
List-Post: <http://groups.google.com/group/clojure/post>, <mailto:clojure@googlegroups.com>
List-Help: <http://groups.google.com/support/>, <mailto:clojure+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/clojure>
Sender: clojure@googlegroups.com
List-Subscribe: <http://groups.google.com/group/clojure/subscribe>, <mailto:clojure+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/clojure/subscribe>, <mailto:googlegroups-manage+999298108703+unsubscribe@googlegroups.com>
Content-Type: multipart/alternative; boundary=001a1134cd02fbfc8604f48916a7
X-TUID: MDiMaQgHLsEa

--001a1134cd02fbfc8604f48916a7
Content-Type: text/plain; charset=ISO-8859-1

On Thu, Mar 13, 2014 at 11:24 AM, Timothy Baldridge <tbaldridge@gmail.com>wrote:

> I talked to Martin after a CodeMesh, and had a wonderful discussion with
> him about performance from his side of the issue. From "his side" I mean
> super high performance.
>
[...]

Hi Tim,

Thanks for explaining  the context of Martin's work - I did not know that
it was so advanced. I did some research back in good times on
http://en.wikipedia.org/wiki/Connection_Machine (via telnet 56kb/s telnet
connection from east Europe to US - that was super cool back then) and can
only atest to what he says in the presentation. You can achieve amazing
levels of performance provided that patterns of data flow and control in
software match exactly parallel nature of given architecture.

However his point is somewhat more serious. He directly "attacks" a premise
that using immutable data is inherently mutli-core friendly which comes
from the deduction that writing reactive software reduces the use locks and
guards hence enables more flow and less waiting. Now his point is that GC
acts a super GIL which effectively kills all the hard work done on the
language and application design level.

Now, I wish Marin eats his own dog food and as pointed out numerous times
in the presentations, he backs up his points with a real experiments and
data. At least it was not apparent wether his conclusions were purely
theoretical or grounded in some experience.

I am in the process of transitioning from Scala to Clojure ecosystem (just
finished SICP videos and have some hard 4clojure problems behind me, but a
lot of to learn) so not yet fluent in all aspects of the language but I
think at some point I will try to write some simulations of STM performace
following some of Martin's intuitions. I think that it will be very cool.

Best,
Andy

-- 
You received this message because you are subscribed to the Google
Groups "Clojure" group.
To post to this group, send email to clojure@googlegroups.com
Note that posts from new members are moderated - please be patient with your first post.
To unsubscribe from this group, send email to
clojure+unsubscribe@googlegroups.com
For more options, visit this group at
http://groups.google.com/group/clojure?hl=en
--- 
You received this message because you are subscribed to the Google Groups "Clojure" group.
To unsubscribe from this group and stop receiving emails from it, send an email to clojure+unsubscribe@googlegroups.com.
For more options, visit https://groups.google.com/d/optout.

--001a1134cd02fbfc8604f48916a7
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr"><br><div class=3D"gmail_extra"><div class=3D"gmail_quote">=
On Thu, Mar 13, 2014 at 11:24 AM, Timothy Baldridge <span dir=3D"ltr">&lt;<=
a href=3D"mailto:tbaldridge@gmail.com" target=3D"_blank">tbaldridge@gmail.c=
om</a>&gt;</span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-=
left:1px solid rgb(204,204,204);padding-left:1ex"><div dir=3D"ltr">I talked=
 to Martin after a CodeMesh, and had a wonderful discussion with him about =
performance from his side of the issue. From &quot;his side&quot; I mean su=
per high performance.</div>
</blockquote><div>[...]<br><br></div><div>Hi Tim,<br><br></div><div>Thanks =
for explaining=A0 the context of Martin&#39;s work - I did not know that it=
 was so advanced. I did some research back in good times on <a href=3D"http=
://en.wikipedia.org/wiki/Connection_Machine">http://en.wikipedia.org/wiki/C=
onnection_Machine</a> (via telnet 56kb/s telnet connection from east Europe=
 to US - that was super cool back then) and can only atest to what he says =
in the presentation. You can achieve amazing levels of performance provided=
 that patterns of data flow and control in software match exactly parallel =
nature of given architecture.<br>
<br></div><div>However his point is somewhat more serious. He directly &quo=
t;attacks&quot; a premise that using immutable data is inherently mutli-cor=
e friendly which comes from the deduction that writing reactive software re=
duces the use locks and guards hence enables more flow and less waiting. No=
w his point is that GC acts a super GIL which effectively kills all the har=
d work done on the language and application design level.<br>
<br></div><div>Now, I wish Marin eats his own dog food and as pointed out n=
umerous times in the presentations, he backs up his points with a real expe=
riments and data. At least it was not apparent wether his conclusions were =
purely theoretical or grounded in some experience.<br>
</div><div><br></div><div>I am in the process of transitioning from Scala t=
o Clojure ecosystem (just finished SICP videos and have some hard 4clojure =
problems behind me, but a lot of to learn) so not yet fluent in all aspects=
 of the language but I think at some point I will try to write some simulat=
ions of STM performace following some of Martin&#39;s intuitions. I think t=
hat it will be very cool.<br>
<br></div><div>Best,<br>Andy<br></div><div><br><br><br><br></div></div></di=
v></div>

<p></p>

-- <br />
You received this message because you are subscribed to the Google<br />
Groups &quot;Clojure&quot; group.<br />
To post to this group, send email to clojure@googlegroups.com<br />
Note that posts from new members are moderated - please be patient with you=
r first post.<br />
To unsubscribe from this group, send email to<br />
clojure+unsubscribe@googlegroups.com<br />
For more options, visit this group at<br />
<a href=3D"http://groups.google.com/group/clojure?hl=3Den">http://groups.go=
ogle.com/group/clojure?hl=3Den</a><br />
--- <br />
You received this message because you are subscribed to the Google Groups &=
quot;Clojure&quot; group.<br />
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:clojure+unsubscribe@googlegroups.com">clojure+uns=
ubscribe@googlegroups.com</a>.<br />
For more options, visit <a href=3D"https://groups.google.com/d/optout">http=
s://groups.google.com/d/optout</a>.<br />

--001a1134cd02fbfc8604f48916a7--
