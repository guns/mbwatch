Delivered-To: self@sungpae.com
Received: by 10.14.212.5 with SMTP id x5csp45966eeo;
        Fri, 14 Mar 2014 11:15:15 -0700 (PDT)
X-Received: by 10.42.62.196 with SMTP id z4mr7854389ich.49.1394820914531;
        Fri, 14 Mar 2014 11:15:14 -0700 (PDT)
Return-Path: <clojure+bncBCLJTZ4JSAIBBLEORWMQKGQEJJ24V3I@googlegroups.com>
Received: from mail-ie0-x237.google.com (mail-ie0-x237.google.com [2607:f8b0:4001:c03::237])
        by mx.google.com with ESMTPS id v9si2811471igs.17.2014.03.14.11.15.14
        for <self@sungpae.com>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Fri, 14 Mar 2014 11:15:14 -0700 (PDT)
Received-SPF: pass (google.com: domain of clojure+bncBCLJTZ4JSAIBBLEORWMQKGQEJJ24V3I@googlegroups.com designates 2607:f8b0:4001:c03::237 as permitted sender)
Authentication-Results: mx.google.com;
       spf=pass (google.com: domain of clojure+bncBCLJTZ4JSAIBBLEORWMQKGQEJJ24V3I@googlegroups.com designates 2607:f8b0:4001:c03::237 as permitted sender) smtp.mail=clojure+bncBCLJTZ4JSAIBBLEORWMQKGQEJJ24V3I@googlegroups.com;
       dkim=pass header.i=@googlegroups.com;
       dmarc=pass (p=NONE dis=NONE) header.from=gmail.com
Received: by mail-ie0-f183.google.com with SMTP id as1sf614105iec.10
        for <self@sungpae.com>; Fri, 14 Mar 2014 11:15:14 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=googlegroups.com; s=20120806;
        h=mime-version:in-reply-to:references:date:message-id:subject:from:to
         :x-original-sender:x-original-authentication-results:reply-to
         :precedence:mailing-list:list-id:list-post:list-help:list-archive
         :sender:list-subscribe:list-unsubscribe:content-type;
        bh=wGQetrShVLKNS5pRaBZdXayVYuAA94mzsDPu/tsLtws=;
        b=STYUrxNhpnPuOCWv2OgBQG3G742olzVInJRNMfo/wk13Dj8iFK70s0JprKVvMmzMox
         R4uTNrCzItVAfOZNY1b6LjYEq/jVRZJ8rBPyy4X6f3X2cKiaODgUad1ZK0ym1XQ7s5rt
         wiVqhhClbTYiLIMx8MaXtbf6+bYX/9jIkqxwjyf9ZizhTCi+KqrR4p7Sufx7HP6AcBqz
         uq3K6n+zpRFf1IDqVqvyp9kADTBuzrjlcGcB8adX7S6Oi+ttIWNadtNKzo78BoXZEGqO
         IUz8ektvbMe8gZ7dT+Vk8PLkyceIduNMLrzuOwIwNcitUg9KfB5mORNWavr+uOrqXsgq
         Ym9g==
X-Received: by 10.182.33.4 with SMTP id n4mr66614obi.9.1394820914010;
        Fri, 14 Mar 2014 11:15:14 -0700 (PDT)
X-BeenThere: clojure@googlegroups.com
Received: by 10.182.11.98 with SMTP id p2ls341029obb.55.gmail; Fri, 14 Mar
 2014 11:15:08 -0700 (PDT)
X-Received: by 10.182.85.65 with SMTP id f1mr3588584obz.33.1394820908125;
        Fri, 14 Mar 2014 11:15:08 -0700 (PDT)
Received: from mail-qc0-x229.google.com (mail-qc0-x229.google.com [2607:f8b0:400d:c01::229])
        by gmr-mx.google.com with ESMTPS id p5si1163120qcq.3.2014.03.14.11.15.08
        for <clojure@googlegroups.com>
        (version=TLSv1 cipher=ECDHE-RSA-RC4-SHA bits=128/128);
        Fri, 14 Mar 2014 11:15:08 -0700 (PDT)
Received-SPF: pass (google.com: domain of gary.trakhman@gmail.com designates 2607:f8b0:400d:c01::229 as permitted sender) client-ip=2607:f8b0:400d:c01::229;
Received: by mail-qc0-x229.google.com with SMTP id i17so3362707qcy.0
        for <clojure@googlegroups.com>; Fri, 14 Mar 2014 11:15:08 -0700 (PDT)
MIME-Version: 1.0
X-Received: by 10.224.160.83 with SMTP id m19mr11486265qax.21.1394820907959;
 Fri, 14 Mar 2014 11:15:07 -0700 (PDT)
Received: by 10.229.193.138 with HTTP; Fri, 14 Mar 2014 11:15:07 -0700 (PDT)
In-Reply-To: <CAJvqBXhprcZCKp32Ru-EY+Hp0NZ2wmVVwdpwYb3mS_k+8qZDUw@mail.gmail.com>
References: <CAMtSTXxevmM5NixMDJR6V4403BAg985h=naq-AAiZ+=NdD55NQ@mail.gmail.com>
	<CAL36E+tA+KTsSPcmxDXNB2xS-fz7D4dNB5o8R6BGaFBiOR5UjA@mail.gmail.com>
	<CAMtSTXygkFcxR0mq_Fw7JkH_HgMn1wp+cqQM4nyKCMOdmmYjUA@mail.gmail.com>
	<CAJ7XQb4gmwPxsaaxyAxMo37Sqwoqw338aDaRAjEH-3eQBPkeFA@mail.gmail.com>
	<CAJvqBXig-J2W678EruVrY=k93bKRHgb+V0d36COojYYVsqB3WA@mail.gmail.com>
	<CAJ7XQb64fMn9d1cs3rsOw3V3kdz1tzA-c4x+TBoZzvzKZf5tVw@mail.gmail.com>
	<CAJvqBXg7DHq47GAPciydTEjnkyGAboGyWSRdsmSeekU=UkVP_g@mail.gmail.com>
	<CAJ7XQb5wwg_g1kFZ5wA-U_hKmtUECY_N5Fc6G9f6nAf+U9sc2w@mail.gmail.com>
	<CAJvqBXhprcZCKp32Ru-EY+Hp0NZ2wmVVwdpwYb3mS_k+8qZDUw@mail.gmail.com>
Date: Fri, 14 Mar 2014 14:15:07 -0400
Message-ID: <CAJvqBXh9PDtOq_ZcNqnh4LcSDLweGjUMj6cffVoWMDiAM5CW5Q@mail.gmail.com>
Subject: Re: STM and persistent data structures performance on mutli-core archs
From: Gary Trakhman <gary.trakhman@gmail.com>
To: "numerical-clojure@googlegroups.com" <clojure@googlegroups.com>
X-Original-Sender: gary.trakhman@gmail.com
X-Original-Authentication-Results: gmr-mx.google.com;       spf=pass
 (google.com: domain of gary.trakhman@gmail.com designates 2607:f8b0:400d:c01::229
 as permitted sender) smtp.mail=gary.trakhman@gmail.com;       dkim=pass
 header.i=@gmail.com;       dmarc=pass (p=NONE dis=NONE) header.from=gmail.com
Reply-To: clojure@googlegroups.com
Precedence: list
Mailing-list: list clojure@googlegroups.com; contact clojure+owners@googlegroups.com
List-ID: <clojure.googlegroups.com>
X-Google-Group-Id: 999298108703
List-Post: <http://groups.google.com/group/clojure/post>, <mailto:clojure@googlegroups.com>
List-Help: <http://groups.google.com/support/>, <mailto:clojure+help@googlegroups.com>
List-Archive: <http://groups.google.com/group/clojure>
Sender: clojure@googlegroups.com
List-Subscribe: <http://groups.google.com/group/clojure/subscribe>, <mailto:clojure+subscribe@googlegroups.com>
List-Unsubscribe: <http://groups.google.com/group/clojure/subscribe>, <mailto:googlegroups-manage+999298108703+unsubscribe@googlegroups.com>
Content-Type: multipart/alternative; boundary=047d7bacb2aabe894804f4950cc0
X-TUID: WMtYapymziX6

--047d7bacb2aabe894804f4950cc0
Content-Type: text/plain; charset=ISO-8859-1

"Everything has tradeoffs. One more example was when Martin explained how
he was able to get a 10x performance boost by pinning a JVM to each socket
in a server, then pinning that JVM's memory to the RAM sockets closest to
that CPU socket. Then he carefully setup shared memory message passing via
burning one core on each CPU to monitor the queues, and moving messages
only in the directions directly supported by the Hyper Transport bus. Once
again, that's amazing...once again I've never needed that to ship a
product. "

This is absolutely fascinating to me.  The ability to do this sort of thing
is a tradeoff from using abstractions (threads, OS threads, Java threads)
that closely match or can be massaged to match or 'have sympathy' for the
hardware realities.  I think this can get lost when we stray too far.


On Fri, Mar 14, 2014 at 1:46 PM, Gary Trakhman <gary.trakhman@gmail.com>wrote:

>
>
>
> On Fri, Mar 14, 2014 at 1:35 PM, Raoul Duke <raould@gmail.com> wrote:
>
>> i am probably out of my depth here, i do not have extensive real-world
>> experience with the various ways to approach parallelism and
>> concurrency (to be distinguished of course), more run of the mill
>> stuff. so if i sound like i'm missing your point or am clueless i ask
>> for your patience :-)
>>
>> > What's the sequential fraction of an arbitrary erlang program, can you
>> even
>> > know (I don't know erlang, so I'm honestly asking)?
>>
>> who cares? or rather, each person has to only care about their own
>> program & situation. maybe their stuff fits erlang. maybe it fits
>> better with something else e.g. LMAX. it. all. depends. :-)
>>
>> everything depends on context. Martin's talk even included the part
>> where he bemoaned that people don't just stay single-threaded and fix
>> their crappy code first. running to concurrency and parallelism is
>> often a cop-out the way i hear him. that could be seen as arguing
>> 'against' erlang.
>>
>> so there are places where your program is mostly sequential and things
>> like "does the GC act like a GIL" do not matter as much as the
>> situation where you are trying to be more concurrent + parallel but
>> not distributed. in those sequential situations, maybe erlang becomes
>> a square peg for the round hole. (although i personally, through
>> suffering as a maintenance programmer, am a *huge* lover of the
>> recursive single assignment "turn" based approach to things, and i
>> love clojure's idea of having a consistent view of the world; most OO
>> people shoot me in the foot a year after they've left the company,
>> with their crappy macaroni code.)
>>
>> > Shared memory pretty darn convenient, and we don't have hundred-core+
>> boxes
>> > yet.
>>
>> i'm confused in that i thought you wrote shared memory ~= message
>> passing. so why talk about shared memory when that is a lie? just like
>> Martin said, RAM is a lie. why not realize everything is really
>> message passing in the long run, model it as such, understand the
>> issues as such? i do not have a chip on my shoulder about this, i'm
>> just sounding it out / exploring the thought.
>>
>>
> Well, yes it's a lie, it's an abstraction, we love those as programmers
> :-).  The question is, is it worth the trouble and under what conditions?
>
> IMO, we don't understand message passing well enough to be great at
> programming or characterizing distributed concurrent systems.  I wonder how
> this changes when you're writing erlang.  I would guess that certain
> classes of programs are really easy to write in erlang compared to other
> languages, and I wonder at what cost?
>
> Clojure appealed to me because I was studying computer architecture in
> grad school, and I think it has a great answer for cores<100 shared-memory
> concurrency, but at some point I acknowledge that might not be good enough.
>
> I'm very interested in Netkernel's approach, actually:
> http://www.1060research.com/products/
> It sort of marries the notion of immutable data with distribution and
> message passing.  URLs as pointers.
>
>
>
>> sincerely.
>>
>> --
>> You received this message because you are subscribed to the Google
>> Groups "Clojure" group.
>> To post to this group, send email to clojure@googlegroups.com
>> Note that posts from new members are moderated - please be patient with
>> your first post.
>> To unsubscribe from this group, send email to
>> clojure+unsubscribe@googlegroups.com
>> For more options, visit this group at
>> http://groups.google.com/group/clojure?hl=en
>> ---
>> You received this message because you are subscribed to the Google Groups
>> "Clojure" group.
>> To unsubscribe from this group and stop receiving emails from it, send an
>> email to clojure+unsubscribe@googlegroups.com.
>> For more options, visit https://groups.google.com/d/optout.
>>
>
>

-- 
You received this message because you are subscribed to the Google
Groups "Clojure" group.
To post to this group, send email to clojure@googlegroups.com
Note that posts from new members are moderated - please be patient with your first post.
To unsubscribe from this group, send email to
clojure+unsubscribe@googlegroups.com
For more options, visit this group at
http://groups.google.com/group/clojure?hl=en
--- 
You received this message because you are subscribed to the Google Groups "Clojure" group.
To unsubscribe from this group and stop receiving emails from it, send an email to clojure+unsubscribe@googlegroups.com.
For more options, visit https://groups.google.com/d/optout.

--047d7bacb2aabe894804f4950cc0
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">&quot;<span style=3D"font-family:arial,sans-serif;font-siz=
e:13px">Everything has tradeoffs. One more example was when Martin explaine=
d how he was able to get a 10x performance boost by pinning a JVM to each s=
ocket in a server, then pinning that JVM&#39;s memory to the RAM sockets cl=
osest to that CPU socket. Then he carefully setup shared memory message pas=
sing via burning one core on each CPU to monitor the queues, and moving mes=
sages only in the directions directly supported by the Hyper Transport bus.=
 Once again, that&#39;s amazing...once again I&#39;ve never needed that to =
ship a product. &quot;</span><div>
<span style=3D"font-family:arial,sans-serif;font-size:13px"><br></span></di=
v><div><span style=3D"font-family:arial,sans-serif;font-size:13px">This is =
absolutely fascinating to me. =A0The ability to do this sort of thing is a =
tradeoff from using abstractions (threads, OS threads, Java threads) that c=
losely match or can be massaged to match or &#39;have sympathy&#39; for the=
 hardware realities. =A0I think this can get lost when we stray too far.</s=
pan></div>
</div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Fri,=
 Mar 14, 2014 at 1:46 PM, Gary Trakhman <span dir=3D"ltr">&lt;<a href=3D"ma=
ilto:gary.trakhman@gmail.com" target=3D"_blank">gary.trakhman@gmail.com</a>=
&gt;</span> wrote:<br>
<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex"><div dir=3D"ltr"><br><div class=3D"gmail_ext=
ra"><br><br><div class=3D"gmail_quote"><div><div class=3D"h5">On Fri, Mar 1=
4, 2014 at 1:35 PM, Raoul Duke <span dir=3D"ltr">&lt;<a href=3D"mailto:raou=
ld@gmail.com" target=3D"_blank">raould@gmail.com</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0px 0px 0px 0.8ex;border-=
left-width:1px;border-left-color:rgb(204,204,204);border-left-style:solid;p=
adding-left:1ex">i am probably out of my depth here, i do not have extensiv=
e real-world<br>


experience with the various ways to approach parallelism and<br>
concurrency (to be distinguished of course), more run of the mill<br>
stuff. so if i sound like i&#39;m missing your point or am clueless i ask<b=
r>
for your patience :-)<br>
<div><br>
&gt; What&#39;s the sequential fraction of an arbitrary erlang program, can=
 you even<br>
&gt; know (I don&#39;t know erlang, so I&#39;m honestly asking)?<br>
<br>
</div>who cares? or rather, each person has to only care about their own<br=
>
program &amp; situation. maybe their stuff fits erlang. maybe it fits<br>
better with something else e.g. LMAX. it. all. depends. :-)<br>
<br>
everything depends on context. Martin&#39;s talk even included the part<br>
where he bemoaned that people don&#39;t just stay single-threaded and fix<b=
r>
their crappy code first. running to concurrency and parallelism is<br>
often a cop-out the way i hear him. that could be seen as arguing<br>
&#39;against&#39; erlang.<br>
<br>
so there are places where your program is mostly sequential and things<br>
like &quot;does the GC act like a GIL&quot; do not matter as much as the<br=
>
situation where you are trying to be more concurrent + parallel but<br>
not distributed. in those sequential situations, maybe erlang becomes<br>
a square peg for the round hole. (although i personally, through<br>
suffering as a maintenance programmer, am a *huge* lover of the<br>
recursive single assignment &quot;turn&quot; based approach to things, and =
i<br>
love clojure&#39;s idea of having a consistent view of the world; most OO<b=
r>
people shoot me in the foot a year after they&#39;ve left the company,<br>
with their crappy macaroni code.)<br>
<div><br>
&gt; Shared memory pretty darn convenient, and we don&#39;t have hundred-co=
re+ boxes<br>
&gt; yet.<br>
<br>
</div>i&#39;m confused in that i thought you wrote shared memory ~=3D messa=
ge<br>
passing. so why talk about shared memory when that is a lie? just like<br>
Martin said, RAM is a lie. why not realize everything is really<br>
message passing in the long run, model it as such, understand the<br>
issues as such? i do not have a chip on my shoulder about this, i&#39;m<br>
just sounding it out / exploring the thought.<br>
<br></blockquote><div><br></div></div></div><div>Well, yes it&#39;s a lie, =
it&#39;s an abstraction, we love those as programmers :-). =A0The question =
is, is it worth the trouble and under what conditions? =A0</div><div><br></=
div>
<div>IMO, we don&#39;t understand message passing well enough to be great a=
t programming or characterizing distributed concurrent systems. =A0I wonder=
 how this changes when you&#39;re writing erlang. =A0I would guess that cer=
tain classes of programs are really easy to write in erlang compared to oth=
er languages, and I wonder at what cost?</div>

<div><br></div><div>Clojure appealed to me because I was studying computer =
architecture in grad school, and I think it has a great answer for cores&lt=
;100 shared-memory concurrency, but at some point I acknowledge that might =
not be good enough.</div>

<div><br></div><div>I&#39;m very interested in Netkernel&#39;s approach, ac=
tually:=A0<a href=3D"http://www.1060research.com/products/" target=3D"_blan=
k">http://www.1060research.com/products/</a>=A0</div><div>It sort of marrie=
s the notion of immutable data with distribution and message passing. =A0UR=
Ls as pointers.<br>

</div><div class=3D""><div><br></div><div>=A0</div><blockquote class=3D"gma=
il_quote" style=3D"margin:0px 0px 0px 0.8ex;border-left-width:1px;border-le=
ft-color:rgb(204,204,204);border-left-style:solid;padding-left:1ex">
sincerely.<br>
<div><div><br>
--<br>
You received this message because you are subscribed to the Google<br>
Groups &quot;Clojure&quot; group.<br>
To post to this group, send email to <a href=3D"mailto:clojure@googlegroups=
.com" target=3D"_blank">clojure@googlegroups.com</a><br>
Note that posts from new members are moderated - please be patient with you=
r first post.<br>
To unsubscribe from this group, send email to<br>
<a href=3D"mailto:clojure%2Bunsubscribe@googlegroups.com" target=3D"_blank"=
>clojure+unsubscribe@googlegroups.com</a><br>
For more options, visit this group at<br>
<a href=3D"http://groups.google.com/group/clojure?hl=3Den" target=3D"_blank=
">http://groups.google.com/group/clojure?hl=3Den</a><br>
---<br>
You received this message because you are subscribed to the Google Groups &=
quot;Clojure&quot; group.<br>
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:clojure%2Bunsubscribe@googlegroups.com" target=3D=
"_blank">clojure+unsubscribe@googlegroups.com</a>.<br>
For more options, visit <a href=3D"https://groups.google.com/d/optout" targ=
et=3D"_blank">https://groups.google.com/d/optout</a>.<br>
</div></div></blockquote></div></div><br></div></div>
</blockquote></div><br></div>

<p></p>

-- <br />
You received this message because you are subscribed to the Google<br />
Groups &quot;Clojure&quot; group.<br />
To post to this group, send email to clojure@googlegroups.com<br />
Note that posts from new members are moderated - please be patient with you=
r first post.<br />
To unsubscribe from this group, send email to<br />
clojure+unsubscribe@googlegroups.com<br />
For more options, visit this group at<br />
<a href=3D"http://groups.google.com/group/clojure?hl=3Den">http://groups.go=
ogle.com/group/clojure?hl=3Den</a><br />
--- <br />
You received this message because you are subscribed to the Google Groups &=
quot;Clojure&quot; group.<br />
To unsubscribe from this group and stop receiving emails from it, send an e=
mail to <a href=3D"mailto:clojure+unsubscribe@googlegroups.com">clojure+uns=
ubscribe@googlegroups.com</a>.<br />
For more options, visit <a href=3D"https://groups.google.com/d/optout">http=
s://groups.google.com/d/optout</a>.<br />

--047d7bacb2aabe894804f4950cc0--
