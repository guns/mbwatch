Date: Fri, 14 Mar 2014 13:39:16 -0500
From: guns <self@sungpae.com>
To: clojure@googlegroups.com
Subject: Re: STM and persistent data structures performance on mutli-core
 archs
Message-ID: <20140314183916.GA23499@SUNGPAE>
Mail-Followup-To: guns <self@sungpae.com>, clojure@googlegroups.com
References: <CAMtSTXxevmM5NixMDJR6V4403BAg985h=naq-AAiZ+=NdD55NQ@mail.gmail.com>
 <CAL36E+tA+KTsSPcmxDXNB2xS-fz7D4dNB5o8R6BGaFBiOR5UjA@mail.gmail.com>
 <CAMtSTXygkFcxR0mq_Fw7JkH_HgMn1wp+cqQM4nyKCMOdmmYjUA@mail.gmail.com>
 <CAJ7XQb4gmwPxsaaxyAxMo37Sqwoqw338aDaRAjEH-3eQBPkeFA@mail.gmail.com>
 <CAJvqBXig-J2W678EruVrY=k93bKRHgb+V0d36COojYYVsqB3WA@mail.gmail.com>
 <CAJ7XQb64fMn9d1cs3rsOw3V3kdz1tzA-c4x+TBoZzvzKZf5tVw@mail.gmail.com>
 <CAJvqBXg7DHq47GAPciydTEjnkyGAboGyWSRdsmSeekU=UkVP_g@mail.gmail.com>
 <CAJ7XQb5wwg_g1kFZ5wA-U_hKmtUECY_N5Fc6G9f6nAf+U9sc2w@mail.gmail.com>
 <CAJvqBXhprcZCKp32Ru-EY+Hp0NZ2wmVVwdpwYb3mS_k+8qZDUw@mail.gmail.com>
 <CAJvqBXh9PDtOq_ZcNqnh4LcSDLweGjUMj6cffVoWMDiAM5CW5Q@mail.gmail.com>
MIME-Version: 1.0
Content-Type: multipart/signed; micalg=pgp-sha512;
	protocol="application/pgp-signature"; boundary="wac7ysb48OaltWcw"
Content-Disposition: inline
In-Reply-To: <CAJvqBXh9PDtOq_ZcNqnh4LcSDLweGjUMj6cffVoWMDiAM5CW5Q@mail.gmail.com>
X-PGP-Key: fp="4BC7 2AA6 B1AE 2B5A C7F7  ADCF 9D1A A266 D2BC 9C2D"


--wac7ysb48OaltWcw
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

On Fri 14 Mar 2014 at 02:15:07PM -0400, Gary Trakhman wrote:

> "Everything has tradeoffs. One more example was when Martin explained how
> he was able to get a 10x performance boost by pinning a JVM to each socket
> in a server, then pinning that JVM's memory to the RAM sockets closest to
> that CPU socket. Then he carefully setup shared memory message passing via
> burning one core on each CPU to monitor the queues, and moving messages
> only in the directions directly supported by the Hyper Transport bus. Once
> again, that's amazing...once again I've never needed that to ship a
> product. "
>
> This is absolutely fascinating to me.  The ability to do this sort of thing
> is a tradeoff from using abstractions (threads, OS threads, Java threads)
> that closely match or can be massaged to match or 'have sympathy' for the
> hardware realities.  I think this can get lost when we stray too far.

cf. the C10M project:

    http://c10m.robertgraham.com/p/blog-page.html

tl;dr
    The kernel gets in the way of extreme hi-throughput, so if that's
    what you want, don't lean on the kernel to do your packet routing,
    thread scheduling, etc.

    guns

--wac7ysb48OaltWcw
Content-Type: application/pgp-signature

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (GNU/Linux)

iQIcBAABCgAGBQJTI0zUAAoJEJ0aombSvJwtvsIP/Rr6uTb8ePWbrwbV+hpJCmav
dkiZXbS+ZyJg1ZI0HkvQuioNNUuTsM78AppB80R4p/2td4la9kTNI+YehqLNyi2h
oAyhey40Vs0UyzzQ/V/x/Qlp6zu+1RIwYQovmbKWqIhqpRs6JZBexcSggJijAgCt
XN6rMrsHAVMy58RkDdwCPjv3dp02vDPezhISvWY1x/Y6Q8TOK3LnKfJ2vR/6BtIJ
9bqfNzu2fBCj3Yn/tHzfOy4vhIkB56KLwWTCqN1Z+e1mXGw4jjVG7kNnghg9lbpR
8+0X1XLDi84OAr4VaqtnT+SK0dhScXitgWX2EHksvJe8fuIa02x9yEuTf4pOHgDK
fNzkuCIxLMO7pxIBpwijvOXVWI95KAgO/qh+5xjW6qhqjy1kcCwa9lUZSfsuUSxS
6jl87LNB0477bE9DBBg+Uq6T9c7GZNNCPuV9TitYtgnjq/fC5PNOeh8geoB+3sYZ
DRUNUU33k/VuH/74dySuRaPHUMxd046dIWYUjcnwFD7RZ1x/voct/XjmCQzhuIP6
vdcrY6EXwQvlyrrU94nnDcCcE7adZKt5MbvZZBY3EVXHvr4qkb+A4HDoeMYG1Yw/
KyyvWa6C9LzqSf5wk6u7vqybk0eeoyol5L9azwquhlivdFErd5yVZyHrnKOQFtw+
m/DRsEAad+oJ7bA9jSGH
=4XXO
-----END PGP SIGNATURE-----

--wac7ysb48OaltWcw--
